CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

PROJECT(LIBEMOJIDEX)


# Generate version header
SET(EMOJIDEX_LIB_VERSION_MAJOR 0)
SET(EMOJIDEX_LIB_VERSION_MINOR 1)
SET(EMOJIDEX_LIB_VERSION_PATCH 0)
SET(EMOJIDEX_LIB_VERSION "${EMOJIDEX_LIB_VERSION_MAJOR}.${EMOJIDEX_LIB_VERSION_MINOR}.${EMOJIDEX_LIB_VERSION_PATCH}")
CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/src/version.h.in ${PROJECT_SOURCE_DIR}/src/version.h @ONLY)

# SET(CMAKE_POSITION_INDEPENDENT_CODE ON)


# We're using C++11
if(UNIX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
endif()


# Generate dynamic library
FIND_PACKAGE(Boost REQUIRED
	system
	filesystem
	)
FIND_PACKAGE(OpenSSL)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)

SET(EMOJIDEX_DYNAMIC_LIB_NAME emojidex)
SET(EMOJIDEX_CPP_FILES
	${PROJECT_SOURCE_DIR}/src/client.cpp
	${PROJECT_SOURCE_DIR}/src/client/transactor.cpp
	${PROJECT_SOURCE_DIR}/src/client/search.cpp
)
SET(EMOJIDEX_LINK_LIBRARIES
	${Boost_FILESYSTEM_LIBRARY}
	${Boost_SYSTEM_LIBRARY}
	${OPENSSL_LIBRARIES}
)

ADD_LIBRARY(${EMOJIDEX_DYNAMIC_LIB_NAME} SHARED ${EMOJIDEX_CPP_FILES})
TARGET_LINK_LIBRARIES(${EMOJIDEX_DYNAMIC_LIB_NAME} ${EMOJIDEX_LINK_LIBRARIES})

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/spec)


# Installation
INSTALL(FILES 
	${PROJECT_SOURCE_DIR}/src/version.h
	${PROJECT_SOURCE_DIR}/src/client.h
	${PROJECT_SOURCE_DIR}/src/client/search.h
	DESTINATION "include/emojidex"
	)
INSTALL(TARGETS ${EMOJIDEX_DYNAMIC_LIB_NAME} DESTINATION "lib")


# Generate static library for SWIG
SET(EMOJIDEX_STATIC_LIB_NAME emojidex_static)

ADD_LIBRARY(${EMOJIDEX_STATIC_LIB_NAME} ${EMOJIDEX_CPP_FILES})
TARGET_LINK_LIBRARIES(${EMOJIDEX_STATIC_LIB_NAME} ${EMOJIDEX_LINK_LIBRARIES})
SET_PROPERTY(TARGET ${EMOJIDEX_STATIC_LIB_NAME} PROPERTY POSITION_INDEPENDENT_CODE TRUE)


# SWIG for Java
FIND_PACKAGE(Java REQUIRED COMPONENTS Runtime Development)
FIND_PACKAGE(JNI REQUIRED)
FIND_PACKAGE(SWIG REQUIRED)
INCLUDE_DIRECTORIES(${JNI_INCLUDE_DIRS})
INCLUDE(UseJava)
INCLUDE(UseSWIG)

SET(CMAKE_SWIG_FLAGS -package libemojidex)
SET(CMAKE_SWIG_OUTDIR "src")
SET_SOURCE_FILES_PROPERTIES("${PROJECT_SOURCE_DIR}/src/libemojidex.i" PROPERTIES CPLUSPLUS 1)
SET_SOURCE_FILES_PROPERTIES("${PROJECT_SOURCE_DIR}/src/libemojidex.i" PROPERTIES SWIG_FLAGS "-includeall")

SET(EMOJIDEX_SWIG_LIB_NAME emojidex_swig)
SET(EMOJIDEX_SWIG_JAR_NAME libemojidex_swig_jar)
SET(EMOJIDEX_JAVA_FILES
	${PROJECT_BINARY_DIR}/src/Client.java
	${PROJECT_BINARY_DIR}/src/libemojidex.java
	${PROJECT_BINARY_DIR}/src/libemojidexJNI.java
	${PROJECT_BINARY_DIR}/src/SWIGTYPE_p_Emojidex__SearchClient.java
	${PROJECT_SOURCE_DIR}/src/java/NativeLibLoader.java
)

SET(CMAKE_JNI_TARGET TRUE)
ADD_JAR(${EMOJIDEX_SWIG_JAR_NAME}
	SOURCES ${EMOJIDEX_JAVA_FILES}
	VERSION ${EMOJIDEX_LIB_VERSION}
)
INSTALL_JAR(${EMOJIDEX_SWIG_JAR_NAME} ${LIB_INSTALL_DIR}/emojidex)
INSTALL_JNI_SYMLINK(${EMOJIDEX_SWIG_JAR_NAME} .)

SWIG_ADD_MODULE(${EMOJIDEX_SWIG_LIB_NAME} java "src/libemojidex.i")
SWIG_LINK_LIBRARIES(${EMOJIDEX_SWIG_LIB_NAME} ${EMOJIDEX_STATIC_LIB_NAME})


# Add native library to jar
SET(JAR_FILE_NAME ${EMOJIDEX_SWIG_JAR_NAME}-${EMOJIDEX_LIB_VERSION}.jar)
SET(SWIG_LIB_FILE_NAME lib${EMOJIDEX_SWIG_LIB_NAME}.so)

ADD_CUSTOM_COMMAND(
	TARGET ${EMOJIDEX_SWIG_LIB_NAME}
	POST_BUILD
	DEPEND ${EMOJIDEX_SWIG_JAR_NAME}

	COMMAND ${JAVA_ARCHIVE} -uvf ${JAR_FILE_NAME} ${SWIG_LIB_FILE_NAME}
)
