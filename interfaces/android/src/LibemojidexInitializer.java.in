package com.emojidex.libemojidex;

import com.emojidex.libemojidex.LibEmojidex;

import java.io.InputStream;
import java.io.FileOutputStream;
import java.io.File;
import java.util.Map;
import java.util.LinkedHashMap;

/**
 *  Libemojidex initializer.
 */
final class LibemojidexInitializer
{
  /**
   *  Initialize.
   */
  static void initialize()
  {
    // Load native libraries.
    final String[] libraryNames = {
      "crystax",
      "gnustl_shared",
      "crypto_1_1",
      "ssl_1_1",
      "curl",
      "msgpackc_2",
      "emojidex-android",
    };

    for(String libname : libraryNames)
      System.loadLibrary(libname);

    // For ssl.
    LibEmojidex.setCACertPath(copyFileFromJar("data/cacert.pem", "cacert.pem"));
  }

  /**
   *  Copy file from jar to temporary directory.
   */
  private static String copyFileFromJar(String source, String destination)
  {
    try
    {
      final InputStream is = LibemojidexInitializer.class.getClassLoader().getResourceAsStream(source);

      final File tmp = new File(System.getProperty("java.io.tmpdir") + "/libemojidex", destination);
      final File parentDir = tmp.getParentFile();
      if(!parentDir.exists())
      {
        parentDir.mkdirs();
        parentDir.deleteOnExit();
      }
      tmp.deleteOnExit();

      final FileOutputStream os = new FileOutputStream(tmp);
      final byte[] buf = new byte[4096];
      int readBytes;

      while( (readBytes = is.read(buf)) != -1 )
        os.write(buf, 0, readBytes);

      os.close();
      is.close();

      return tmp.getAbsolutePath();
    }
    catch(Exception e)
    {
      e.printStackTrace();
    }

    return "";
  }
}
